#include "CBEntityComponentSystem/Core/Entity.h"

//-------------------------------------------------------------------
// CONSTRUCTOR - DESTRUCTOR
//-------------------------------------------------------------------

cb::ecs::Entity::Entity()
	: m_guid(cb::base::GUID())
{
}

//-------------------------------------------------------------------
// PUBLIC
//-------------------------------------------------------------------

bool cb::ecs::Entity::isNull()
{
	return m_guid.isNull();
}

//-------------------------------------------------------------------

void cb::ecs::Entity::setGuid(const cb::base::GUID& guid)
{
	m_guid = guid;
}

//-------------------------------------------------------------------

const cb::base::GUID& cb::ecs::Entity::guid() const
{
	return m_guid;
}

//-------------------------------------------------------------------
// PROTECTED
//-------------------------------------------------------------------

//-------------------------------------------------------------------
// PRIVATE
//-------------------------------------------------------------------


//----------------------------------------------------------------------------------------

bool cb::ecs::operator==(const cb::ecs::Entity& lhs, const cb::ecs::Entity& rhs)
{
	return lhs.guid() == rhs.guid();
}

//----------------------------------------------------------------------------------------

bool cb::ecs::operator!=(const cb::ecs::Entity& lhs, const cb::ecs::Entity& rhs)
{
	return !(lhs == rhs);
}

//----------------------------------------------------------------------------------------

bool cb::ecs::operator<(const cb::ecs::Entity& lhs, const cb::ecs::Entity& rhs)
{
	return lhs.guid() < rhs.guid();
}

//----------------------------------------------------------------------------------------

bool cb::ecs::operator>(const cb::ecs::Entity& lhs, const cb::ecs::Entity& rhs)
{
	return lhs.guid() > rhs.guid();
}

//----------------------------------------------------------------------------------------